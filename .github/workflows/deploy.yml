name: Deploy

on:
  release:
    types:
      - published

jobs:
  information:
    name: ℹ️ Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ steps.information.outputs.architectures }}
      build: ${{ steps.information.outputs.build }}
      description: ${{ steps.information.outputs.description }}
      name: ${{ steps.information.outputs.name }}
      slug: ${{ steps.information.outputs.slug }}
      target: ${{ steps.information.outputs.target }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🚀 Run add-on information action
        id: information
        uses: frenck/action-addon-information@v1

      - name: ℹ️ Gather version information
        id: version
        run: |
          if [[ "${{ github.event_name }}" = "release" ]]; then
            version="${{ github.event.release.tag_name }}"
            version="${version,,}"
            version="${version#v}"
          else
            version="edge"
          fi
          echo "version=${version}" >> $GITHUB_OUTPUT

  build:
    name: 👷 Build ${{ matrix.architecture }}
    runs-on: ubuntu-latest
    needs: information
    strategy:
      matrix:
        architecture: ${{ fromJson(needs.information.outputs.architectures) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🏗 Set up build cache
        id: cache
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: docker-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            docker-${{ matrix.architecture }}

      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: ℹ️ Compose build flags
        id: flags
        run: |
          echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          from=$(yq --no-colors eval ".build_from.${{ matrix.architecture }}" "config.yaml")
          echo "from=${from}" >> $GITHUB_OUTPUT

          if [[ "${{ matrix.architecture}}" = "amd64" ]]; then
            echo "platform=linux/amd64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.architecture }}" = "aarch64" ]]; then
            echo "platform=linux/arm64" >> $GITHUB_OUTPUT
          fi

      - name: 🚀 Build
        uses: docker/build-push-action@v5
        with:
          load: true
          context: .
          file: ./Dockerfile
          cache-from: |
            type=local,src=/tmp/.docker-cache
          cache-to: |
            type=local,mode=max,dest=/tmp/.docker-cache-new
          platforms: ${{ steps.flags.outputs.platform }}
          tags: |
            ${{ needs.information.outputs.slug }}/${{ matrix.architecture }}:${{ needs.information.outputs.version }}
          build-args: |
            BUILD_ARCH=${{ matrix.architecture }}
            BUILD_DATE=${{ steps.flags.outputs.date }}
            BUILD_DESCRIPTION=${{ needs.information.outputs.description }}
            BUILD_NAME=${{ needs.information.outputs.name }}
            BUILD_REF=${{ github.sha }}
            BUILD_REPOSITORY=${{ github.repository }}
            BUILD_VERSION=${{ needs.information.outputs.version }}

      - name: 🚚 Swap build cache
        run: |
          rm -rf /tmp/.docker-cache
          mv /tmp/.docker-cache-new /tmp/.docker-cache
